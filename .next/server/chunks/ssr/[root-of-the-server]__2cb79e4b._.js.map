{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDCRH4EusKWPxH9YVbYRr3N6AMvcNd98RI\",\n  authDomain: \"design-sales-d95bb.firebaseapp.com\",\n  projectId: \"design-sales-d95bb\",\n  storageBucket: \"design-sales-d95bb.appspot.com\",\n  messagingSenderId: \"711093196627\",\n  appId: \"1:711093196627:web:69d4aeacbd23720b07f3a6\",\n  measurementId: \"G-275V79NTNJ\"\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Configure Firestore for better connectivity\nimport { connectFirestoreEmulator, enableNetwork, disableNetwork } from \"firebase/firestore\";\n\n// Configure Firestore settings for better connectivity\nif (typeof window !== 'undefined') {\n  // Only run in browser environment\n  try {\n    // Enable network and configure settings\n    enableNetwork(db);\n    \n    // Add connection state monitoring\n    const handleConnectionChange = () => {\n      if (navigator.onLine) {\n        enableNetwork(db).catch(console.warn);\n      } else {\n        disableNetwork(db).catch(console.warn);\n      }\n    };\n    \n    window.addEventListener('online', handleConnectionChange);\n    window.addEventListener('offline', handleConnectionChange);\n  } catch (error) {\n    console.warn('Firebase network configuration warning:', error);\n  }\n}\n\nexport { app, db, auth };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;AACvD;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;;AAKrB,uDAAuD;AACvD,uCAAmC;;AAoBnC","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/store/resources.ts"],"sourcesContent":["'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc } from 'firebase/firestore';\n\nexport type PublicLink = {\n  id: string;\n  name: string;\n  url: string;\n  desc: string;\n};\n\nexport type PublicApi = {\n  id: string;\n  name: string;\n  endpoint: string;\n  status: '生效中' | '已禁用';\n};\n\n/*\n * =================================================================\n * 注意：这是您需要在Firestore中创建的数据的示例。\n * `public_links` 和 `public_apis` 是两个独立的集合。\n * =================================================================\nconst mockLinksForFirestore = [\n  { name: 'ShadCN UI 文档', url: 'https://ui.shadcn.com', desc: '组件库文档。' },\n  { name: 'Lucide 图标集', url: 'https://lucide.dev', desc: '项目所使用的图标库。' },\n];\n\nconst mockApisForFirestore = [\n  { name: 'Stripe API', endpoint: 'https://api.stripe.com', status: '生效中' },\n  { name: 'Google Maps API', endpoint: 'https://maps.googleapis.com', status: '生效中' },\n  { name: '内部用户数据API', endpoint: '/api/internal/users', status: '已禁用'},\n];\n*/\n\n// --- Links ---\nexport async function getLinks(): Promise<PublicLink[]> {\n    try {\n        const snapshot = await getDocs(collection(db, 'public_links'));\n        return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as PublicLink));\n    } catch (error) {\n        console.error(\"Error fetching links from Firestore:\", error);\n        throw error;\n    }\n}\n\nexport async function addLink(linkData: Omit<PublicLink, 'id'>): Promise<PublicLink> {\n    const docRef = await addDoc(collection(db, 'public_links'), linkData);\n    return { id: docRef.id, ...linkData };\n}\n\nexport async function deleteLink(linkId: string): Promise<void> {\n    await deleteDoc(doc(db, 'public_links', linkId));\n}\n\n// --- APIs ---\nexport async function getApis(): Promise<PublicApi[]> {\n    try {\n        const snapshot = await getDocs(collection(db, 'public_apis'));\n        return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as PublicApi));\n    } catch (error) {\n        console.error(\"Error fetching APIs from Firestore:\", error);\n        throw error;\n    }\n}\n\nexport async function addApi(apiData: Omit<PublicApi, 'id'>): Promise<PublicApi> {\n    const docRef = await addDoc(collection(db, 'public_apis'), apiData);\n    return { id: docRef.id, ...apiData };\n}\n\nexport async function deleteApi(apiId: string): Promise<void> {\n    await deleteDoc(doc(db, 'public_apis', apiId));\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AAAA;;;;;;AAkCO,eAAe;IAClB,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QAC9C,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC,CAAe;IAChF,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wCAAwC;QACtD,MAAM;IACV;AACJ;AAEO,eAAe,QAAQ,QAAgC;IAC1D,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,iBAAiB;IAC5D,OAAO;QAAE,IAAI,OAAO,EAAE;QAAE,GAAG,QAAQ;IAAC;AACxC;AAEO,eAAe,WAAW,MAAc;IAC3C,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,gBAAgB;AAC5C;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QAC9C,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,IAAI,IAAI,EAAE;YAAC,CAAc;IAC/E,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM;IACV;AACJ;AAEO,eAAe,OAAO,OAA8B;IACvD,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,gBAAgB;IAC3D,OAAO;QAAE,IAAI,OAAO,EAAE;QAAE,GAAG,OAAO;IAAC;AACvC;AAEO,eAAe,UAAU,KAAa;IACzC,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,eAAe;AAC3C;;;IArCsB;IAUA;IAKA;IAKA;IAUA;IAKA;;AAnCA,+OAAA;AAUA,+OAAA;AAKA,+OAAA;AAKA,+OAAA;AAUA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/.next-internal/server/app/prompts/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getApis as '00da22baa2d32f9a1ae8eb34de6697e404208511aa'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/app/prompts/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/prompts/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/prompts/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/app/prompts/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/prompts/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/prompts/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}