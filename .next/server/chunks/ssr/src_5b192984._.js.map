{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n\n    "],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;AAfA;;;;;;;AAiBA,MAAM,OAAO,8JAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,8JAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,KAAK,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAErB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AACA,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,gKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AACA,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;AACA,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-card px-3 py-2 ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/ai/flows/product-recommendations.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A product recommendation AI agent.\n *\n * - getProductRecommendations - A function that handles the product recommendation process.\n * - ProductRecommendationsInput - The input type for the getProductRecommendations function.\n * - ProductRecommendationsOutput - The return type for the getProductRecommendations function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport type { UserProfile } from './generate-user-profile';\n\nconst ProductRecommendationsInputSchema = z.object({\n  userProfile: z.object({\n    summary: z.string().describe('A summary of the user profile.'),\n    tags: z.array(z.string()).describe('A list of keywords or tags related to the user profile.'),\n  }).describe('The user profile generated by the AI.'),\n   photoDataUri: z.string().optional().describe(\"An optional photo of a product, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"),\n});\nexport type ProductRecommendationsInput = z.infer<typeof ProductRecommendationsInputSchema>;\n\nconst ProductRecommendationsOutputSchema = z.object({\n  recommendations: z.array(\n    z.object({\n      name: z.string().describe('The name of the recommended product or service.'),\n      description: z.string().describe('A short description of the recommendation.'),\n      imageUrl: z.string().optional().describe('An optional URL to an image of the product or service. This should always be a placeholder from https://placehold.co.'),\n      link: z.string().optional().describe('An optional URL to the product or service page.'),\n    })\n  ).describe('An array of product or service recommendations.'),\n});\nexport type ProductRecommendationsOutput = z.infer<typeof ProductRecommendationsOutputSchema>;\n\nexport async function getProductRecommendations(input: ProductRecommendationsInput): Promise<ProductRecommendationsOutput> {\n  return productRecommendationsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'productRecommendationsPrompt',\n  input: {schema: ProductRecommendationsInputSchema},\n  output: {schema: ProductRecommendationsOutputSchema},\n  prompt: `You are a helpful shopping assistant. Based on the following user profile, please provide a list of product or service recommendations.\n\nUser Profile Summary: {{{userProfile.summary}}}\nUser Profile Tags: {{#each userProfile.tags}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}\n{{#if photoDataUri}}\nThe user also provided this image for reference: {{media url=photoDataUri}}\n{{/if}}\n\nPlease provide a list of 3-5 recommendations. For each recommendation, include a name, description, and an optional link. For the imageUrl, you MUST use a placeholder image from 'https://placehold.co/600x400.png'. Do not use any other domain.\n\nYour output should be a JSON object that follows this schema: ${JSON.stringify(ProductRecommendationsOutputSchema.shape)}`,\n});\n\nconst productRecommendationsFlow = ai.defineFlow(\n  {\n    name: 'productRecommendationsFlow',\n    inputSchema: ProductRecommendationsInputSchema,\n    outputSchema: ProductRecommendationsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAoCsB,4BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/ai/flows/generate-user-profile.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A user profiling AI agent.\n *\n * - generateUserProfile - A function that handles the user profiling process.\n * - UserProfileInput - The input type for the generateUserProfile function.\n * - UserProfileOutput - The return type for the generateUserProfile function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst UserProfileInputSchema = z.object({\n  description: z.string().describe('The description of the desired product or service.'),\n  photoDataUri: z.string().optional().describe(\"An optional photo of a product, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"),\n});\nexport type UserProfileInput = z.infer<typeof UserProfileInputSchema>;\n\nconst UserProfileOutputSchema = z.object({\n    summary: z.string().describe('A concise summary of the user profile based on their request.'),\n    tags: z.array(z.string()).describe('A list of 3-5 keywords or tags that represent the user\\'s needs and preferences.'),\n});\nexport type UserProfile = z.infer<typeof UserProfileOutputSchema>;\n\nexport async function generateUserProfile(input: UserProfileInput): Promise<UserProfile> {\n  return generateUserProfileFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'userProfilePrompt',\n  input: {schema: UserProfileInputSchema},\n  output: {schema: UserProfileOutputSchema},\n  prompt: `Analyze the following user request and generate a user profile.\n\nThe user is looking for a product or service. Based on their description and/or image, create a concise summary of their likely profile and distill their needs into 3-5 relevant keyword tags.\n\nDescription: {{{description}}}\n{{#if photoDataUri}}\nImage: {{media url=photoDataUri}}\n{{/if}}\n\nYour output should be a JSON object that follows this schema: ${JSON.stringify(UserProfileOutputSchema.shape)}`,\n});\n\nconst generateUserProfileFlow = ai.defineFlow(\n  {\n    name: 'generateUserProfileFlow',\n    inputSchema: UserProfileInputSchema,\n    outputSchema: UserProfileOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAyBsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/store/demands.ts"],"sourcesContent":["\nimport { db } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, Timestamp, query, orderBy, doc, deleteDoc } from 'firebase/firestore';\n\nexport type Demand = {\n  id: string;\n  title: string;\n  description: string;\n  budget: string;\n  category: string;\n  status: '开放中' | '洽谈中' | '已完成' | '已关闭';\n  created: string; // Stored as YYYY-MM-DD string\n  authorId?: string; \n};\n\n// This is a placeholder for our mock database table for demands.\n// In a real full-stack application, this would be a Firestore collection.\n/*\n * =================================================================\n * 注意：这是您需要在Firestore的`demands`集合中创建的数据的示例。\n * 应用现在将直接从Firestore读取数据。\n *\n * Firestore中的`created`字段应该是一个Timestamp类型。\n * =================================================================\nconst mockDemandsForFirestore = [\n  { title: '为新的咖啡品牌设计一个定制logo', description: '我们需要一个现代、简约且令人难忘的logo，要能体现咖啡的温暖和社区感。颜色以棕色和米色为主。', budget: '¥3,500 - ¥7,000', category: '平面设计', status: '开放中', created: Timestamp.fromDate(new Date('2024-08-01')), authorId: 'user-1' },\n  { title: '开发一款宠物看护服务的移动应用', description: '一款iOS和Android应用，功能包括用户注册、宠物档案管理、服务预订、在线支付和实时聊天。', budget: '¥56,000 - ¥84,000', category: '软件开发', status: '洽谈中', created: Timestamp.fromDate(new Date('2024-07-28')), authorId: 'user-2' },\n  { title: '为一个新奇小工具寻找3D打印原型', description: '一个手持式电子产品的外壳原型，需要高精度打印，材料为ABS或类似强度的塑料。需要提供3D模型文件。', budget: '¥10,000 - ¥17,500', category: '3D建模', status: '开放中', created: Timestamp.fromDate(new Date('2024-07-25')), authorId: 'user-1' },\n  { title: '网站专业翻译（中到英）', description: '一个大约5000字的营销网站，内容涉及科技和金融，需要翻译成地道的商务英语。', budget: '¥5,600 - ¥8,400', category: '翻译', status: '已完成', created: Timestamp.fromDate(new Date('2024-07-15')), authorId: 'user-2' },\n  { title: '寻找环保包装的供应商', description: '为化妆品系列寻找可持续、可回收的包装解决方案，包括瓶子、罐子和外包装盒。', budget: '可议价', category: '采购', status: '开放中', created: Timestamp.fromDate(new Date('2024-08-05')), authorId: 'user-1' },\n];\n*/\n\n\n/**\n * Fetches all demands from the Firestore 'demands' collection.\n * @returns A promise that resolves to an array of all demands.\n */\nexport async function getDemands(): Promise<Demand[]> {\n    try {\n        const demandsCollection = collection(db, 'demands');\n        const q = query(demandsCollection, orderBy('created', 'desc'));\n        const demandSnapshot = await getDocs(q);\n        \n        const demandList = demandSnapshot.docs.map(doc => {\n            const data = doc.data();\n            // Convert Firestore Timestamp to 'YYYY-MM-DD' string\n            const createdDate = (data.created as Timestamp).toDate();\n            const createdString = createdDate.toISOString().split('T')[0];\n\n            return { \n                id: doc.id, \n                ...data,\n                created: createdString,\n            } as Demand;\n        });\n        \n        return demandList;\n    } catch (error) {\n        console.error(\"Error fetching demands from Firestore:\", error);\n        return [];\n    }\n}\n\n/**\n * Adds a new demand to the Firestore 'demands' collection.\n * @param demandData The data for the new demand.\n * @returns A promise that resolves to the newly created demand.\n */\nexport async function addDemand(demandData: Omit<Demand, 'id' | 'created' | 'status'>): Promise<Demand> {\n    try {\n        const demandsCollection = collection(db, 'demands');\n        const newDocData = {\n            ...demandData,\n            status: '开放中' as const,\n            created: Timestamp.now(),\n        };\n\n        const docRef = await addDoc(demandsCollection, newDocData);\n        \n        const newDemand: Demand = {\n            ...demandData,\n            id: docRef.id,\n            status: '开放中',\n            created: newDocData.created.toDate().toISOString().split('T')[0],\n        };\n        \n        return newDemand;\n    } catch (error) {\n        console.error(\"Error adding demand to Firestore:\", error);\n        throw error;\n    }\n}\n\n/**\n * Deletes a demand from Firestore.\n * @param demandId The ID of the demand to delete.\n * @returns A promise that resolves when the deletion is complete.\n */\nexport async function deleteDemand(demandId: string): Promise<void> {\n    try {\n        const demandDocRef = doc(db, 'demands', demandId);\n        await deleteDoc(demandDocRef);\n    } catch (error) {\n        console.error(\"Error deleting demand from Firestore:\", error);\n        throw error;\n    }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;;;AAoCO,eAAe;IAClB,IAAI;QACA,MAAM,oBAAoB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACzC,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,mBAAmB,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,WAAW;QACtD,MAAM,iBAAiB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QAErC,MAAM,aAAa,eAAe,IAAI,CAAC,GAAG,CAAC,CAAA;YACvC,MAAM,OAAO,IAAI,IAAI;YACrB,qDAAqD;YACrD,MAAM,cAAc,AAAC,KAAK,OAAO,CAAe,MAAM;YACtD,MAAM,gBAAgB,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YAE7D,OAAO;gBACH,IAAI,IAAI,EAAE;gBACV,GAAG,IAAI;gBACP,SAAS;YACb;QACJ;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,EAAE;IACb;AACJ;AAOO,eAAe,UAAU,UAAqD;IACjF,IAAI;QACA,MAAM,oBAAoB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACzC,MAAM,aAAa;YACf,GAAG,UAAU;YACb,QAAQ;YACR,SAAS,iKAAA,CAAA,YAAS,CAAC,GAAG;QAC1B;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,mBAAmB;QAE/C,MAAM,YAAoB;YACtB,GAAG,UAAU;YACb,IAAI,OAAO,EAAE;YACb,QAAQ;YACR,SAAS,WAAW,OAAO,CAAC,MAAM,GAAG,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QACpE;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM;IACV;AACJ;AAOO,eAAe,aAAa,QAAgB;IAC/C,IAAI;QACA,MAAM,eAAe,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,WAAW;QACxC,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE;IACpB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/features/shopping-assistant.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormField, FormItem } from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { getProductRecommendations, type ProductRecommendationsOutput } from '@/ai/flows/product-recommendations';\nimport { generateUserProfile, type UserProfile } from '@/ai/flows/generate-user-profile';\nimport { Loader2, Image as ImageIcon, Send, Sparkles, Tags, BrainCircuit, CheckCircle, MessageSquare } from 'lucide-react';\nimport Image from 'next/image';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Badge } from '../ui/badge';\nimport { useAuthStore, getUsers, type User } from '@/store/auth';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Separator } from '../ui/separator';\nimport { addDemand } from '@/store/demands';\nimport { useRouter } from 'next/navigation';\n\nconst formSchema = z.object({\n  description: z.string().min(1, { message: '请输入您要搜索的内容' }),\n  image: z.instanceof(File).optional(),\n});\ntype FormValues = z.infer<typeof formSchema>;\n\nconst fileToDataUri = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (typeof reader.result === 'string') {\n                resolve(reader.result);\n            } else {\n                reject(new Error('Failed to read file as Data URI'));\n            }\n        };\n        reader.onerror = (error) => reject(error);\n        reader.readAsDataURL(file);\n    });\n};\n\nconst UserMessage = ({ text, imageUrl }: { text: string; imageUrl?: string | null }) => (\n    <div className=\"flex items-start justify-end gap-3\">\n        <div className=\"bg-primary text-primary-foreground rounded-lg p-3 max-w-lg\">\n            {imageUrl && <Image src={imageUrl} alt=\"用户上传\" width={200} height={200} className=\"rounded-md mb-2\" />}\n            <p>{text}</p>\n        </div>\n        <Avatar className=\"border\">\n            <AvatarImage src=\"https://placehold.co/40x40.png\" data-ai-hint=\"user avatar\" />\n            <AvatarFallback>您</AvatarFallback>\n        </Avatar>\n    </div>\n);\n\nconst AIMessage = ({ profile, recommendations, onPublish }: { profile: UserProfile | null; recommendations: ProductRecommendationsOutput['recommendations']; onPublish: () => void; }) => {\n    const { role } = useAuthStore();\n    return (\n        <div className=\"flex items-start gap-3\">\n            <Avatar className=\"border\">\n                <AvatarImage src=\"https://placehold.co/40x40.png\" data-ai-hint=\"bot avatar\" />\n                <AvatarFallback>AI</AvatarFallback>\n            </Avatar>\n            <div className=\"flex flex-col gap-4 max-w-2xl\">\n                {profile && <UserProfileDisplay profile={profile} />}\n                {recommendations.length > 0 && <RecommendationsDisplay recommendations={recommendations} onPublish={onPublish} showPublishButton={role === 'user'} />}\n            </div>\n        </div>\n    );\n};\n\nconst LoadingMessage = () => (\n    <div className=\"flex items-start gap-3\">\n        <Avatar className=\"border\">\n            <AvatarImage src=\"https://placehold.co/40x40.png\" data-ai-hint=\"bot avatar\" />\n            <AvatarFallback>AI</AvatarFallback>\n        </Avatar>\n        <div className=\"flex flex-col gap-4 w-full max-w-2xl\">\n            <Card>\n                <CardHeader>\n                    <Skeleton className=\"h-6 w-1/2\" />\n                    <Skeleton className=\"h-4 w-3/4\" />\n                </CardHeader>\n                <CardContent>\n                    <Skeleton className=\"h-4 w-full mb-2\" />\n                    <div className=\"flex gap-2\">\n                        <Skeleton className=\"h-6 w-20 rounded-full\" />\n                        <Skeleton className=\"h-6 w-24 rounded-full\" />\n                    </div>\n                </CardContent>\n            </Card>\n            <Card>\n                <CardHeader>\n                    <Skeleton className=\"h-6 w-1/3\" />\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    {[1, 2].map(i => (\n                        <Card key={i}>\n                            <Skeleton className=\"h-32 w-full rounded-t-lg\" />\n                            <CardHeader>\n                                <Skeleton className=\"h-5 w-3/4\" />\n                            </CardHeader>\n                            <CardContent>\n                                <Skeleton className=\"h-4 w-full\" />\n                            </CardContent>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n        </div>\n    </div>\n);\n\nconst UserProfileDisplay = ({ profile }: { profile: UserProfile }) => (\n    <Card className=\"bg-accent/20 border-accent\">\n        <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 font-headline\"><BrainCircuit className=\"text-primary\" /> 用户画像分析</CardTitle>\n            <CardDescription>AI 根据您的输入生成的分析结果。</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n            <div>\n                <h3 className=\"font-semibold flex items-center gap-2\"><Sparkles className=\"text-primary/80\"/>画像总结</h3>\n                <p className=\"text-muted-foreground mt-1 text-sm\">{profile.summary}</p>\n            </div>\n            <div>\n                <h3 className=\"font-semibold flex items-center gap-2\"><Tags className=\"text-primary/80\"/>关键词标签</h3>\n                <div className=\"flex flex-wrap gap-2 mt-2\">\n                    {profile.tags.map(tag => <Badge key={tag} variant=\"secondary\">{tag}</Badge>)}\n                </div>\n            </div>\n        </CardContent>\n    </Card>\n);\n\nconst RecommendationsDisplay = ({ recommendations, onPublish, showPublishButton }: { recommendations: ProductRecommendationsOutput['recommendations']; onPublish: () => void; showPublishButton: boolean; }) => (\n    <Card>\n        <CardHeader>\n            <CardTitle className=\"font-headline flex items-center gap-2\"><CheckCircle className=\"text-primary\"/> 首要推荐</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {recommendations.map((item, index) => (\n                    <Card key={index} className=\"flex flex-col hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                        <div className=\"aspect-video bg-muted relative\">\n                            <Image\n                                src={item.imageUrl || `https://placehold.co/600x400.png`}\n                                alt={item.name}\n                                fill\n                                className=\"object-cover\"\n                                data-ai-hint=\"product photo\"\n                            />\n                        </div>\n                        <CardHeader className=\"pb-2\">\n                            <CardTitle className=\"text-base font-bold\">{item.name}</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex-grow text-sm\">\n                            <p className=\"text-muted-foreground line-clamp-3\">{item.description}</p>\n                        </CardContent>\n                        <CardFooter className=\"gap-2\">\n                            <Button size=\"sm\" asChild variant=\"secondary\">\n                                <a href={item.link || '#'} target=\"_blank\" rel=\"noopener noreferrer\">查看详情</a>\n                            </Button>\n                            <Button size=\"sm\" asChild>\n                                <a href={item.link || '#'} target=\"_blank\" rel=\"noopener noreferrer\">立即购买</a>\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                ))}\n            </div>\n             <Card className=\"bg-background\">\n                <CardHeader>\n                    <CardTitle className=\"text-md font-semibold\">推荐理由</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <p className=\"text-muted-foreground text-sm\">这些推荐是基于您对舒适和防水性的需求，结合了徒步场景的专业考量，为您精选了市场上评价最高且最符合条件的产品。</p>\n                </CardContent>\n            </Card>\n            {showPublishButton && (\n                <div className=\"text-center pt-2\">\n                    <Button variant=\"outline\" onClick={onPublish}>不满意？发布到需求池</Button>\n                </div>\n            )}\n        </CardContent>\n    </Card>\n);\n\ntype Message = {\n    type: 'user' | 'ai' | 'loading';\n    text?: string;\n    imageUrl?: string | null;\n    profile?: UserProfile | null;\n    recommendations?: ProductRecommendationsOutput['recommendations'];\n};\n\nfunction CustomServiceConnector({ lastUserDemand }: { lastUserDemand: string }) {\n    const [step, setStep] = useState<'initial' | 'input' | 'loading' | 'results'>('initial');\n    const [demand, setDemand] = useState('');\n    const [designers, setDesigners] = useState<User[]>([]);\n    const [supplier, setSupplier] = useState<User | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if (lastUserDemand && step === 'input') {\n            setDemand(lastUserDemand);\n        }\n    }, [lastUserDemand, step]);\n\n    const getAvatar = (user: User): string => {\n        const role = user.role;\n        const name = user.name;\n        if (role === 'admin') return 'male administrator';\n        if (role === 'supplier') return 'technology logo';\n        if (role === 'creator') {\n            const creatorMap: {[key: string]: string} = {\n                '爱丽丝': 'female creator', '鲍勃': 'male designer', '查理': 'male artist', '戴安娜': 'female artist',\n            }\n            return creatorMap[name] || 'female creator';\n        };\n        return 'user avatar';\n    };\n\n    const handleFindMatch = async () => {\n        if (!demand) return;\n        setIsLoading(true);\n        setStep('loading');\n\n        try {\n            const allUsers = await getUsers();\n            // Simulate matching logic based on demand description\n            const recommendedDesigners = allUsers.filter(u => u.role === 'creator' && u.specialty?.includes('角色'));\n            const recommendedSupplier = allUsers.find(u => u.role === 'supplier' && u.specialty?.includes('3D')) || null;\n            \n            setDesigners(recommendedDesigners);\n            setSupplier(recommendedSupplier);\n\n        } catch (error) {\n            console.error(\"Failed to fetch users for custom service\", error);\n        } finally {\n             // Simulate network delay for effect\n            setTimeout(() => {\n                setIsLoading(false);\n                setStep('results');\n            }, 1500);\n        }\n    };\n    \n    return (\n        <Card className=\"shadow-lg\">\n            <CardHeader>\n                <CardTitle className=\"font-headline\">高端定制服务</CardTitle>\n                <CardDescription>需要更个性化的服务吗？我们可以为您连接顶级设计师和供应商。</CardDescription>\n            </CardHeader>\n            <CardContent>\n                {step === 'initial' && (\n                     <>\n                        <div className=\"aspect-video bg-muted rounded-lg mb-4 relative overflow-hidden\">\n                            <Image src=\"https://placehold.co/600x400.png\" fill objectFit=\"cover\" alt=\"定制服务\" data-ai-hint=\"astronaut suit\" />\n                        </div>\n                        <Button className=\"w-full\" onClick={() => setStep('input')}>开始定制</Button>\n                    </>\n                )}\n\n                {step === 'input' && (\n                    <div className=\"space-y-4\">\n                        <Textarea \n                            placeholder=\"请详细描述您的特别需求，例如：我需要一个赛博朋克风格的女性机器人角色模型，用于游戏开发...\"\n                            rows={6}\n                            value={demand}\n                            onChange={(e) => setDemand(e.target.value)}\n                        />\n                        <Button className=\"w-full\" onClick={handleFindMatch} disabled={!demand || isLoading}>寻找匹配</Button>\n                         <Button variant=\"link\" size=\"sm\" className=\"w-full\" onClick={() => setStep('initial')}>返回</Button>\n                    </div>\n                )}\n\n                {(isLoading || step === 'loading') && (\n                     <div className=\"flex flex-col items-center justify-center space-y-4 p-8\">\n                        <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n                        <p className=\"text-muted-foreground\">正在为您寻找最佳匹配...</p>\n                    </div>\n                )}\n\n                {step === 'results' && !isLoading && (\n                    <div className=\"space-y-6\">\n                        {designers.length > 0 && (\n                            <div>\n                                <h4 className=\"font-semibold mb-3\">推荐的创意设计师</h4>\n                                <div className=\"space-y-4\">\n                                    {designers.map(d => (\n                                         <div key={d.id} className=\"flex items-center justify-between p-3 bg-background rounded-lg\">\n                                            <div className=\"flex items-center gap-3\">\n                                                <Avatar>\n                                                    <AvatarImage src={`https://placehold.co/40x40.png`} data-ai-hint={getAvatar(d)}/>\n                                                    <AvatarFallback>{d.name.charAt(0)}</AvatarFallback>\n                                                </Avatar>\n                                                <div>\n                                                    <p className=\"font-bold\">{d.name}</p>\n                                                    <p className=\"text-xs text-muted-foreground\">{d.specialty}</p>\n                                                </div>\n                                            </div>\n                                            <Button size=\"sm\" variant=\"outline\"><MessageSquare className=\"mr-2 h-4 w-4\"/> 在线沟通</Button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n\n                        {supplier && (\n                            <>\n                                <Separator />\n                                <div>\n                                    <h4 className=\"font-semibold mb-3\">推荐的供应商</h4>\n                                     <div className=\"flex items-center justify-between p-3 bg-background rounded-lg\">\n                                        <div className=\"flex items-center gap-3\">\n                                            <Avatar>\n                                                <AvatarImage src={`https://placehold.co/40x40.png`} data-ai-hint={getAvatar(supplier)}/>\n                                                <AvatarFallback>{supplier.name.charAt(0)}</AvatarFallback>\n                                            </Avatar>\n                                            <div>\n                                                <p className=\"font-bold\">{supplier.name}</p>\n                                                <p className=\"text-xs text-muted-foreground\">{supplier.specialty}</p>\n                                            </div>\n                                        </div>\n                                        <Button size=\"sm\" variant=\"outline\"><MessageSquare className=\"mr-2 h-4 w-4\"/> 在线沟通</Button>\n                                    </div>\n                                    <p className=\"text-xs text-muted-foreground mt-2\">如果没有合适的设计师，我们推荐此供应商来满足您的需求。</p>\n                                </div>\n                            </>\n                        )}\n                        <Button variant=\"link\" size=\"sm\" className=\"w-full\" onClick={() => setStep('input')}>重新描述需求</Button>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n\n\nexport function ShoppingAssistant() {\n    const { user } = useAuthStore();\n    const router = useRouter();\n    const [messages, setMessages] = useState<Message[]>([\n        { type: 'ai', profile: null, recommendations: [] }\n    ]);\n    const [imagePreview, setImagePreview] = useState<string | null>(null);\n    const [lastUserDemand, setLastUserDemand] = useState('');\n    const { toast } = useToast();\n\n    const form = useForm<FormValues>({\n        resolver: zodResolver(formSchema),\n        defaultValues: { description: '' },\n    });\n    const {formState: { isSubmitting }} = form;\n\n    const handlePublishToDemandPool = async () => {\n        if (!lastUserDemand) {\n            toast({\n                variant: 'destructive',\n                title: '无法发布',\n                description: '没有可以发布的需求内容。',\n            });\n            return;\n        }\n\n        try {\n            await addDemand({\n                title: `来自AI助手: ${lastUserDemand.substring(0, 20)}...`,\n                description: lastUserDemand,\n                category: 'AI生成',\n                budget: '待议',\n                authorId: user?.id\n            });\n            toast({\n                title: '发布成功!',\n                description: '您的需求已发布到需求池，很快就会有专业人士与您联系。',\n                action: (\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => router.push('/demand-pool')}>\n                        前往查看\n                    </Button>\n                ),\n            });\n        } catch (error) {\n            toast({\n                variant: 'destructive',\n                title: '发布失败',\n                description: '抱歉，发布需求时遇到问题，请稍后再试。',\n            });\n            console.error(\"Failed to publish to demand pool:\", error);\n        }\n    };\n\n    const onSubmit: SubmitHandler<FormValues> = async (data) => {\n        const userMessageText = data.description;\n        setLastUserDemand(userMessageText);\n        const userImageFile = data.image;\n\n        let userMessageImageUrl: string | null = null;\n        let imageDataUri: string | undefined = undefined;\n\n        if (userImageFile) {\n            userMessageImageUrl = URL.createObjectURL(userImageFile);\n            imageDataUri = await fileToDataUri(userImageFile);\n        }\n\n        setMessages(prev => [...prev, { type: 'user', text: userMessageText, imageUrl: userMessageImageUrl }, { type: 'loading' }]);\n        form.reset();\n        setImagePreview(null);\n\n        try {\n            const profile = await generateUserProfile({\n                description: userMessageText,\n                photoDataUri: imageDataUri\n            });\n\n            const result = await getProductRecommendations({\n                userProfile: profile,\n                photoDataUri: imageDataUri\n            });\n\n            setMessages(prev => {\n                const newMessages = [...prev];\n                const loadingIndex = newMessages.findIndex(m => m.type === 'loading');\n                if (loadingIndex !== -1) {\n                    newMessages[loadingIndex] = { type: 'ai', profile, recommendations: result.recommendations };\n                }\n                return newMessages;\n            });\n\n        } catch (error) {\n            toast({\n                variant: 'destructive',\n                title: '出错啦',\n                description: '无法获取推荐，请稍后再试。',\n            });\n            setMessages(prev => prev.filter(m => m.type !== 'loading'));\n            console.error(error);\n        }\n    };\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0];\n        if (file) {\n            form.setValue('image', file);\n            setImagePreview(URL.createObjectURL(file));\n        } else {\n            form.setValue('image', undefined);\n            setImagePreview(null);\n        }\n    }\n    \n    const examplePrompts = [\n        '帮我找一款适合程序员的机械键盘',\n        '推荐一个轻便的旅行双肩包',\n        '有没有适合初学者的无人机推荐？',\n    ];\n\n    return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-start h-full\">\n            <div className=\"lg:col-span-2 h-full flex flex-col\">\n                <Card className=\"flex-1 flex flex-col shadow-lg\">\n                    <CardHeader className=\"border-b\">\n                        <CardTitle className=\"font-headline text-2xl\">AI 购物助手</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"flex-1 p-4 overflow-y-auto space-y-6\">\n                        {messages.map((msg, index) => {\n                            if (msg.type === 'user' && msg.text) {\n                                return <UserMessage key={index} text={msg.text} imageUrl={msg.imageUrl} />;\n                            }\n                            if (msg.type === 'ai') {\n                                if (index === 0) { // Welcome message\n                                    return (\n                                        <div key={index} className=\"flex items-start gap-3\">\n                                            <Avatar className=\"border\">\n                                                <AvatarImage src=\"https://placehold.co/40x40.png\" data-ai-hint=\"bot avatar\" />\n                                                <AvatarFallback>AI</AvatarFallback>\n                                            </Avatar>\n                                            <div className=\"bg-card rounded-lg p-3 max-w-lg\"><p>您好！我是您的专属AI购物助手，请告诉我您在寻找什么？可以描述一下，或者上传一张图片。😊</p></div>\n                                        </div>\n                                    );\n                                }\n                                return <AIMessage key={index} profile={msg.profile || null} recommendations={msg.recommendations || []} onPublish={handlePublishToDemandPool} />;\n                            }\n                            if (msg.type === 'loading') {\n                                return <LoadingMessage key={index} />;\n                            }\n                            return null;\n                        })}\n                    </CardContent>\n                    <CardFooter className=\"p-4 border-t\">\n                        <Form {...form}>\n                            <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-full space-y-3\">\n                                {imagePreview && (\n                                    <div className=\"relative w-24 h-24\">\n                                        <Image src={imagePreview} alt=\"图片预览\" fill className=\"rounded-md object-cover\" />\n                                        <Button\n                                            type=\"button\"\n                                            variant=\"destructive\"\n                                            size=\"icon\"\n                                            className=\"absolute -top-2 -right-2 h-6 w-6 rounded-full\"\n                                            onClick={() => {\n                                                form.setValue('image', undefined);\n                                                setImagePreview(null);\n                                            }}\n                                        >\n                                            &times;\n                                        </Button>\n                                    </div>\n                                )}\n                                <div className=\"flex gap-2\">\n                                    <FormField\n                                        control={form.control}\n                                        name=\"description\"\n                                        render={({ field }) => (\n                                            <FormItem className=\"flex-1\">\n                                                <FormControl>\n                                                    <Textarea placeholder=\"例如：我想要一双适合夏天徒步的舒适、防水的运动鞋...\" {...field} rows={1} className=\"min-h-[40px]\"/>\n                                                </FormControl>\n                                            </FormItem>\n                                        )}\n                                    />\n                                    <Button type=\"button\" variant=\"outline\" size=\"icon\" asChild>\n                                        <label htmlFor=\"image-upload\" className=\"cursor-pointer\">\n                                            <ImageIcon />\n                                            <input id=\"image-upload\" type=\"file\" accept=\"image/*\" className=\"sr-only\" onChange={handleFileChange} />\n                                        </label>\n                                    </Button>\n                                    <Button type=\"submit\" disabled={isSubmitting} size=\"icon\">\n                                        {isSubmitting ? <Loader2 className=\"animate-spin\" /> : <Send />}\n                                    </Button>\n                                </div>\n                                <div className=\"flex flex-wrap gap-2\">\n                                    {examplePrompts.map((prompt) => (\n                                        <Button\n                                            key={prompt}\n                                            type=\"button\"\n                                            variant=\"outline\"\n                                            size=\"sm\"\n                                            className=\"text-xs\"\n                                            onClick={() => form.setValue('description', prompt)}\n                                        >\n                                            {prompt}\n                                        </Button>\n                                    ))}\n                                </div>\n                            </form>\n                        </Form>\n                    </CardFooter>\n                </Card>\n            </div>\n            <div className=\"lg:col-span-1 space-y-8\">\n                <CustomServiceConnector lastUserDemand={lastUserDemand} />\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}