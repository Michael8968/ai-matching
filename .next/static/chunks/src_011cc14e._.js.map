{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n\n    "],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelwong/Documents/GitHub/ai-matching/src/app/designers/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Image from \"next/image\";\nimport { Star, Circle, MessageSquare, Phone, Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { type User, getUsers } from '@/store/auth';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/hooks/use-toast';\n\nfunction DesignerCardSkeleton() {\n    return (\n        <Card className=\"flex flex-col\">\n            <CardHeader className=\"flex-row items-start gap-4 space-y-0\">\n                <Skeleton className=\"h-16 w-16 rounded-full\" />\n                <div className=\"flex-1 space-y-2\">\n                    <Skeleton className=\"h-6 w-3/4\" />\n                    <Skeleton className=\"h-4 w-1/2\" />\n                    <Skeleton className=\"h-5 w-1/4\" />\n                </div>\n            </CardHeader>\n            <CardContent className=\"flex-grow space-y-4\">\n                <Skeleton className=\"h-4 w-full\" />\n                <Skeleton className=\"h-4 w-5/6\" />\n                <div className=\"flex flex-wrap gap-2\">\n                    <Skeleton className=\"h-6 w-20 rounded-full\" />\n                    <Skeleton className=\"h-6 w-24 rounded-full\" />\n                </div>\n            </CardContent>\n            <CardFooter className=\"gap-2\">\n                <Skeleton className=\"h-10 w-full\" />\n                <Skeleton className=\"h-10 w-full\" />\n            </CardFooter>\n        </Card>\n    );\n}\n\nexport default function DesignersPage() {\n    const router = useRouter();\n    const [designers, setDesigners] = useState<User[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { toast } = useToast();\n\n    useEffect(() => {\n        async function fetchDesigners() {\n            setIsLoading(true);\n            try {\n                const allUsers = await getUsers();\n                const creatorUsers = allUsers.filter(user => user.role === 'creator');\n                setDesigners(creatorUsers);\n            } catch (error) {\n                console.error(\"Failed to fetch designers:\", error);\n                toast({ variant: 'destructive', title: '加载失败', description: '无法从服务器获取设计师列表。' });\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchDesigners();\n    }, [toast]);\n\n    const getAvatar = (name: string): string => {\n        const nameMap: { [key: string]: string } = {\n            '爱丽丝': 'female creator',\n            '鲍勃': 'male designer',\n            '查理': 'male artist',\n            '戴安娜': 'female artist',\n        };\n        return nameMap[name] || 'user avatar';\n    };\n    \n    return (\n        <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n                <div>\n                <h1 className=\"text-3xl font-headline font-bold\">创意设计师</h1>\n                <p className=\"text-muted-foreground\">寻找顶尖创意人才并与之合作。</p>\n                </div>\n                <div className=\"flex gap-2\">\n                    <Button variant=\"outline\">系统推荐</Button>\n                    <Button onClick={() => router.push('/demand-pool')}>去需求池发布</Button>\n                </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                {isLoading ? (\n                    Array.from({ length: 4 }).map((_, index) => <DesignerCardSkeleton key={index} />)\n                ) : designers.length === 0 ? (\n                    <div className=\"col-span-full text-center py-12 text-muted-foreground\">\n                        <p>暂无创意设计师信息。</p>\n                    </div>\n                ) : (\n                    designers.map(designer => (\n                        <Card key={designer.id} className=\"flex flex-col\">\n                            <CardHeader className=\"flex-row items-start gap-4 space-y-0\">\n                                <Image src={`https://placehold.co/64x64.png`} alt={designer.name} width={64} height={64} className=\"rounded-full\" data-ai-hint={getAvatar(designer.name)} />\n                                <div className=\"flex-1\">\n                                    <CardTitle className=\"text-xl\">{designer.name}</CardTitle>\n                                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                                        <Star className=\"w-4 h-4 text-yellow-400 fill-yellow-400\" />\n                                        <span>{designer.rating?.toFixed(1)}</span>\n                                        <span className=\"text-xs\">/ 5.0</span>\n                                    </div>\n                                    <Badge variant={designer.online ? 'default' : 'outline'} className=\"mt-1 bg-green-500 hover:bg-green-600 text-white data-[state=false]:bg-muted data-[state=false]:text-muted-foreground\">\n                                        <Circle className={`mr-2 h-2 w-2 ${designer.online ? 'fill-white' : 'fill-muted-foreground'}`} />\n                                        {designer.online ? '在线' : '离线'}\n                                    </Badge>\n                                </div>\n                            </CardHeader>\n                            <CardContent className=\"flex-grow space-y-4\">\n                                <p className=\"text-sm text-muted-foreground\">{designer.description}</p>\n                                <div className=\"flex flex-wrap gap-2\">\n                                    {designer.tags?.map(tag => (\n                                        <Badge key={tag} variant=\"secondary\">{tag}</Badge>\n                                    ))}\n                                </div>\n                            </CardContent>\n                            <CardFooter className=\"gap-2\">\n                                <Button className=\"w-full\" disabled={!designer.online}>\n                                    <Phone className=\"mr-2 h-4 w-4\"/>\n                                    预约\n                                </Button>\n                                <Button variant=\"outline\" className=\"w-full\" disabled={!designer.online}>\n                                    <MessageSquare className=\"mr-2 h-4 w-4\"/>\n                                    沟通\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}